<Activity mc:Ignorable="sap sap2010" x:Class="DispatchQueue" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_dtSP" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1240,828</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>DispatchQueue_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="DispatchQueue" sap:VirtualizedContainerService.HintSize="556,763" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strEntityName" />
      <Variable x:TypeArguments="sd:DataTable" Default="[new DataTable()]" Name="dtMain" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="514,671" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence DisplayName="Send Queue to Performer" sap:VirtualizedContainerService.HintSize="476,422" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:SortDataTable ColumnIndex="{x:Null}" DataColumn="{x:Null}" ColumnName="Default Warehouse Production" DataTable="[in_dtSP]" DisplayName="Sort Data Table on warehouse" sap:VirtualizedContainerService.HintSize="434,22" sap2010:WorkflowViewState.IdRef="SortDataTable_1" Order="Ascending" OutputDataTable="[dtMain]" SortOrder="Ascending" />
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtMain]" DisplayName="For Each Row in Table" sap:VirtualizedContainerService.HintSize="434,137" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                </ActivityAction.Argument>
                <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Queue Item - To Orch" FolderPath="[in_Config(&quot;OrchestratorFolderName&quot;).ToString]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddQueueItem_1" Priority="Normal" QueueType="[in_Config(&quot;OrchestratorQueueName&quot;).ToString]" Reference="[row.Item(&quot;ID&quot;).ToString]">
                  <ui:AddQueueItem.ItemInformation>
                    <InArgument x:TypeArguments="x:String" x:Key="ProductClass">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Product Class&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ProductDescription">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Product Description&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="SubClass">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Left(row.Item(&quot;Product Subclass&quot;).ToString, 2)" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="SUM">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Left(row.Item(&quot;Standard UM&quot;).ToString, 2)" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Lot">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Lot Control&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Style">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Style&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Cons">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Theoretical Cons Code&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="NWeight">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Net Weight Std UM&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Weight">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Gross Weight - Std UM&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Color">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Color Code&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ProductType">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Left(row.Item(&quot;Product Type&quot;).ToString,2)" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="PrintType">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Left(row.Item(&quot;Print Type&quot;).ToString,2)" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="PrintMethod">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Left(row.Item(&quot;Print Method&quot;).ToString, 2)" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="CoreID">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Left(row.Item(&quot;Core Type&quot;).ToString, 2)" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Carton">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Left(row.Item(&quot;Carton Type&quot;).ToString, 2)" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="BoxLabel">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Left(row.item(&quot;Box Label&quot;).ToString, 2)" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="PackageType">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Left(row.Item(&quot;Package Code&quot;).ToString, 3)" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ProductAdditive">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Left(row.Item(&quot;Product Additive&quot;).ToString, 1)" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ULListed">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;UL Listed&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="FloodCoated">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Flood Coated&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="PrivateLabelFlag">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Private Label Flag&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="StackableFlag">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Stackable Flag&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="HeatTreatedPallet">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;HeatTreatedPallet&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="DefaultWarehouseProduction">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Left(row.Item(&quot;Default Warehouse Production&quot;).ToString,2)" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="DefaultWarehouseConsumption">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Left(row.Item(&quot;Default Warehouse Production&quot;).ToString,2)" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="DfltLocationProduction">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Left(row.Item(&quot;Default Location Production&quot;).ToString,2)" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="DfltLocationConsumption">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Left(row.Item(&quot;Default Location Production&quot;).ToString,2)" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="POLeadTime2">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;PO Lead Time 2 Days&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="POLeadTimeforNewRelease">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;PO Lead Time New Release Days&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="MPPCode">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;MPP&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="WhereFromCode">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Left(row.Item(&quot;Where from Code&quot;).ToString, 1)" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="PurchasingUM">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Left(row.Item(&quot;Purchasing UM&quot;).ToString, 2)" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Defaultunitprice">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Standard Cost - Std UM&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="CountryofOrigin">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Left(row.Item(&quot;Country of Origin&quot;).ToString, 2)" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="PrimarySourceSite">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Mfg Site - Stocking Warehouse&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="HarmonizedTariff">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Harmonized Tariff #&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="FreightClassification">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Freight Class Code&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="NatlMotorFrtClass">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;NMFC Code&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Height">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Gauge-Micron-Mil-Tensile&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="HUM">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Gauge-Micron-Mil-Tensile UM&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Width">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Unit Width&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="WUM">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Unit Width UM&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Length">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Unit Length&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="LUM">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Unit Length UM&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="HotNotes">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Hot Note&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Description1">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Description Ext1&quot;).ToString.Trim" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ID">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;ID&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ProductNumber">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Product Number&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Conversions">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Conversions&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Author">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Email Author&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Created">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Created By&quot;).ToString" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Description2">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Description Ext2&quot;).ToString.Trim" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Description3">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Description Ext3&quot;).ToString.Trim" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Description4">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Description Ext4&quot;).ToString.Trim" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Description5">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row.Item(&quot;Description Ext5&quot;).ToString.Trim" />
                    </InArgument>
                  </ui:AddQueueItem.ItemInformation>
                </ui:AddQueueItem>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <ui:LogMessage DisplayName="Log Message -  Queue" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Message="[&quot;Queue Generated&quot;]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="480,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="System Exception" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message - System Exception" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[exception.Message]" />
              <Rethrow DisplayName="Rethrow - System Excp" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="480,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="ui:BusinessRuleException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Business Exception" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message - Business Exception" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[exception.Message]" />
              <Rethrow DisplayName="Rethrow - Business Excp" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>